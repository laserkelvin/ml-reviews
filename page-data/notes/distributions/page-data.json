{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/notes/distributions",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"distributions\"), mdx(\"h2\", null, \"Truncated Gaussian\"), mdx(\"p\", null, \"To #truncate a Gaussian:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/ml-reviews/b3c03d24837990878149f8f2a36805f8/2021-08-24-22-42-05.png\",\n    \"alt\": null\n  })), mdx(\"h2\", null, \"Mixture models\"), mdx(\"p\", null, \"From \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/decision-making-book\",\n    \"title\": \"decision-making-book\"\n  }, \"[[decision-making-book]]\"), \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"...a mixture model, which is a mixture of multiple distributions. We mix together a collection of unimodal distributions to obtain a multimodal distribution. A Gaussian mixture model is a mixture model that is simply a weighted average of different Gaussian distributions.\")), mdx(\"p\", null, \"The figure below just shows a Gaussian mixture as basically the sum of Gaussians.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/ml-reviews/4ec60d0dfc93f6f892251a91bbe594c1/2021-08-24-22-38-48.png\",\n    \"alt\": null\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/notes/distributions","title":"distributions"}}},"pageContext":{"id":"3fa3f33f-498e-54e5-b13a-279f5cc23a03","refWordMdxSlugDict":{}}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}