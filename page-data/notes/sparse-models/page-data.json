{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/notes/sparse-models",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"sparse-models\"), mdx(\"p\", null, \"Efficient representations of models that only contain \\\"useful\\\" information; sparisfication is the act of removing redundant weights from models, which result in smaller and faster models.\"), mdx(\"p\", null, \"The interest for this in #intel-research would be scalable, improved CPU performance for tasks.\"), mdx(\"p\", null, \"This \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://neuralmagic.com/wp-content/uploads/2021/02/Sparsity-in-Deep-Learning-Pruning-and-growth-for-efficient-inference-and-training-in-neural-networks-.pdf\"\n  }, \"paper\"), \" provides a very detailed review which I need to go throughput.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [Neural magic](https://www.docs.neuralmagic.com/main/index.html) appears to be a very comprehensive collection of [[sparse-models]] literature and implementations","referrer":{"parent":{"id":"1783f312-8653-507d-89e8-2109b76242f0","fields":{"slug":"/notes/scaling-tensorflow-to-300mil","title":"scaling-tensorflow-to-300mil"}}}}]},"fields":{"slug":"/notes/sparse-models","title":"sparse-models"}}},"pageContext":{"id":"1834c9ea-8b48-56d7-a645-61e068e388e9","refWordMdxSlugDict":{}}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}