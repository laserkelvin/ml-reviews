{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/notes/variational autoencoder","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"needs-expanding\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"variational-autoencoder\"\n  }, \"variational autoencoder\"), mdx(\"p\", null, \"A probabilistic \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/architecture\",\n    \"title\": \"architecture\"\n  }, \"[[architecture]]\"), \" from the family of [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"autoencoders\",\n    \"title\": \"autoencoders\"\n  }, \"autoencoders\"), \"]. The self-learned representation is used to parameterize a probability distribution (i.e. the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/posterior-distribution\",\n    \"title\": \"posterior distribution\"\n  }, \"[[posterior distribution]]\"), \"), from which a decoder can draw samples from to generate a range of outputs. We can either directly predict the mean of the distribution, or perform sampling over the distribution to obtain #uncertainty estimates.\"), mdx(\"p\", null, \"Is a sub-category of [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"bayesian-neural-networks\",\n    \"title\": \"bayesian-neural-networks\"\n  }, \"bayesian-neural-networks\"), \"], whereby variational inference is done, usually in contrast to full \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/MCMC\",\n    \"title\": \"MCMC\"\n  }, \"[[MCMC]]\"), \" sampling.\"), mdx(\"p\", null, \"Problem with VAEs is that they are susceptible to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/posterior-collapse\",\n    \"title\": \"posterior collapse\"\n  }, \"[[posterior collapse]]\"), \", where a single output is produced regardless: this is when the decoder ignores the latent variable completely, and becomes a deterministic model.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://lilianweng.github.io/lil-log/2018/08/12/from-autoencoder-to-beta-vae.html\"\n  }, \"This blog by Lilian Weng\"), \" has an incredibly in-depth description of the theory behind VAEs.\"), mdx(\"h2\", {\n    \"id\": \"types-of-vaes\"\n  }, \"Types of VAEs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/beta-VAE\",\n    \"title\": \"beta-VAE\"\n  }, \"[[beta-VAE]]\"), \" provides a tuning parameter, $\\\\beta$, that attempts to force disentangling of the latent vector into unit Gaussian priors. Relatively easy to understand and implement, however quite readily suffers from \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/posterior-collapse\",\n    \"title\": \"posterior collapse\"\n  }, \"[[posterior collapse]]\"), \".\")), mdx(\"p\", null, \"[posterior collapse]\", \": posterior collapse \\\"posterior collapse\\\"\\n\", \"[posterior collapse]\", \": posterior collapse \\\"posterior collapse\\\"\"), mdx(\"p\", null, \"[posterior collapse]\", \": posterior collapse \\\"posterior collapse\\\"\\n\", \"[posterior collapse]\", \": posterior collapse \\\"posterior collapse\\\"\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"autoencoders\"\n  }, \"autoencoders\"), mdx(\"p\", null, \"A type of machine learning \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/architecture\",\n    \"title\": \"architecture\"\n  }, \"[[architecture]]\"), \" that encodes data into a self-learned representation.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a4f94698-6ed6-5e36-bae3-d4b2fc873702","fields":{"slug":"/notes/autoencoders","title":"autoencoders"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bayesian-neural-networks\"\n  }, \"bayesian-neural-networks\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/neural-networks\",\n    \"title\": \"neural networks\"\n  }, \"[[neural networks]]\"), \" in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/bayesian\",\n    \"title\": \"bayesian\"\n  }, \"[[bayesian]]\"), \" formalism. The general idea is that the initialization schemes for neural networks act as priors, and by training the network, we end up with a parameterized \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/posterior-distribution\",\n    \"title\": \"posterior distribution\"\n  }, \"[[posterior distribution]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"f9da958d-5c93-5082-898e-0f3d0a4b0dd1","fields":{"slug":"/notes/bayesian-neural-networks","title":"bayesian-neural-networks"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"posterior-collapse\"\n  }, \"posterior collapse\"), mdx(\"p\", null, \"An issue primarily related to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/variational-autoencoder\",\n    \"title\": \"variational autoencoder\"\n  }, \"[[variational autoencoder]]\"), \" models, where the output becomes deterministic in a supposedly probabilistic model.\"), mdx(\"p\", null, \"Some annealing schemes, such as [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\",\n    \"title\": \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\"\n  }, \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\"), \"] is developed to help VAEs learn to encode good latent variables \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \" good accuracy in the outputs.\"), mdx(\"p\", null, \"[variational autoencoder]\", \": variational autoencoder \\\"variational autoencoder\\\"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"568fb177-3b40-5259-99b5-3a6c253faa0f","fields":{"slug":"/notes/posterior collapse","title":"posterior collapse"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ml-reviews\"\n  }, \"ML Reviews\"), mdx(\"p\", null, \"Welcome to ML Reviews: a Zettelkasten for learning about machine learning methodologies. Primarily, I've been writing notes for myself, with the intention of publishing them here in the hopes of benefiting others.\"), mdx(\"p\", null, \"In lieu of a real index page, here are some topics that will get you started on a journey:\"), mdx(\"h2\", {\n    \"id\": \"paper-reviews\"\n  }, \"Paper reviews\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"notes/scalable-uncertainties-from-deep-ensembles\",\n    \"title\": \"scalable-uncertainties-from-deep-ensembles\"\n  }, \"scalable-uncertainties-from-deep-ensembles\"), \"]; a review on deep ensembles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"notes/cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\",\n    \"title\": \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\"\n  }, \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\"), \"]; a review on $\\\\beta$-VAE cyclic annealing\")), mdx(\"h2\", {\n    \"id\": \"topics\"\n  }, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/variational-autoencoder\",\n    \"title\": \"variational autoencoder\"\n  }, \"[[variational autoencoder]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/fast-gradient-sign-method\",\n    \"title\": \"fast gradient sign method\"\n  }, \"[[fast gradient sign method]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"notes/flux-notes\",\n    \"title\": \"flux-notes\"\n  }, \"flux-notes\"), \"]\")), mdx(\"p\", null, \"[variational autoencoder]\", \": notes/variational autoencoder \\\"variational autoencoder\\\"\\n\", \"[fast gradient sign method]\", \": notes/fast gradient sign method \\\"fast gradient sign method\\\"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"be8ae56f-15a1-5eec-9f16-43ec9bc7a323","fields":{"slug":"/readme","title":"ML Reviews"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"posterior-collapse\"\n  }, \"posterior collapse\"), mdx(\"p\", null, \"An issue primarily related to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/variational-autoencoder\",\n    \"title\": \"variational autoencoder\"\n  }, \"[[variational autoencoder]]\"), \" models, where the output becomes deterministic in a supposedly probabilistic model.\"), mdx(\"p\", null, \"Some annealing schemes, such as [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\",\n    \"title\": \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\"\n  }, \"cyclical-annealing-schedule-a-simple-approach-to-mitigating-kl-vanishing\"), \"] is developed to help VAEs learn to encode good latent variables \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \" good accuracy in the outputs.\"), mdx(\"p\", null, \"[variational autoencoder]\", \": variational autoencoder \\\"variational autoencoder\\\"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"568fb177-3b40-5259-99b5-3a6c253faa0f","fields":{"slug":"/notes/posterior collapse","title":"posterior collapse"}}}]},"fields":{"slug":"/notes/variational autoencoder","title":"variational autoencoder"}}},"pageContext":{"id":"0dff8916-86db-5c4c-bdee-c0c7be1cb322"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}